continue
DSOResponse.build p
p
continue
DSOResponse.build p
p
continue
p
q
continue
get_packet
r.packet.length
len
r
continue
client.endpoints
client.handle
client.@handle.lol
client.@handle
client[@handle]
client
client.class
continue
get_fields true
get_fields false
get_fields
continue
g = get_fields.pop!
g
g = get_fields.pop
get_fields
get_fields.
get_fields.pop
get_fields
last[:extra_attr].size
get_fields
continue
get_fields.each do |n| sum = sum + sumit(self[n]) end
get_fields.each do |n| puts self[n] end
get_fields.each do |n| self[n] end
self[:start]
get_fields.each do |n| sum = sum + sumit(self[n]) end
get_fields.each do |n| sum = sum + sumit(n) end
get_fields do
continue
self[:start]
self
get_fields.each do |n| sum = sum + sumit(n) end
get_fields.each do |n|
get_fields.each
get_fields
continue
self[:year]
self.datetime
self
continue
self[:year]
self.class
self
continue
 (a.in?(hexed) ? hex(self[a]) : self[a])
a.in? hexed
 (a.in? hexed ? hex(self[a]) : self[a])
 i[a] = (a.in? hexed ? hex(self[a]) : self[a])
continue
x
j[a]
j = {}
 i = {}
i = {}
i[a]
self[a]
hex(self[a])
a.in? hexed
hexed.class
hexed
a
continue
c
hex(self[a])
self[a]
a
self
a.in? hexed
self
self.class
a.class
a
continue
:command.in? hexed
hexed
a
a.in? hexed
hexed.get? a
hexed.exists a
hexed.has_attribute? a
hexed.has_key? a
hexed.keys
hexed.keys a
hexed.key? a
hexed[a.to_i]
hexed[a]
hexed a
hexed.exists? a
hexed.exist? a
hexed[a]
a
hexed
